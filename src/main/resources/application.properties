# application.prperties : ?????? ?? ??
# ??? #
# 1. ??? ?? ?? ?? ??
server.port = 8081

## 2. mysql ??
## 1. ???? ??? ???? [ mysql:mysql-connector-java ???? ?? ]
## 1. mysql ???? ??? ?? [  ???? ?? : mysql:mysql-connector-java ]
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
## 2. ?? ?? =" jdbc://IP??:PORT??/DB????
## 2. db ?? =" jdbc:mysql://IP??:PORT??/DB?
#spring.datasource.url=jdbc:mysql://database-1.c6ouinvf1ego.ap-northeast-2.rds.amazonaws.com:3306/spring?serverTimezone=Asia/Seoul
#### 3. db ?? ??
#### 3. db ????
#spring.datasource.username=
#spring.datasource.password=


spring.datasource.url=jdbc:mysql://localhost:3306/spring?serverTimezone=Asia/Seoul
## 3. db ?? ??
## 3. db ????
spring.datasource.username=root
spring.datasource.password=1234
#
## 4. sql ??? console ?? ??
################# ???? ? ???? ###############
## 4. sql ?? console ? ??
##spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.show-sql=true
## 4. sql ??? console ??? ?? ?? ??
## 4. sql ?? console ? ?? ?? ??
#spring.jpa.properties.hibernate.format_sql=true
## 4. SQL ??? console ??? ? ????? ?? ????? ??
## 4. SQL ?? console?  ? ????? ??? ??
#logging.level.org.hibernate.type.descriptor.sql = trace
#
## 5. DDL ?? ??
##??? ??? ??
## ?? ??? ????? ???? ?? ????
spring.jpa.hibernate.ddl-auto=update
##?? ??? ??? ??? ??
## ?? ??? ????? ??? ?? ??
##spring.jpa.hibernate.ddl.auto = create
#
## 6. DB?? ??? ?????? ???? [ ?? ?? ?? ?? ]
## 6. mysql ? ?? db??? ??? ????? ?? [ MySQL8Dialect ?? ?? db ?? ]
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

#????
spring.devtools.restart.enabled = true 

###################################??? SMTP ??
spring.mail.host = smtp.naver.com
spring.mail.port = 587
spring.mail.username =
spring.mail.password = 
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.enabled = true


## ??? ???

## 1. ?????? REST API ?, ???? ??

# 1. \uD074\uB77C\uC774\uC5B8\uD2B8\uC758 REST API \uD0A4 \uC640 \uBCF4\uC548 \uCF54\uB4DC
spring.security.oauth2.client.registration.kakao.client-id = b62e13d54ae4777a0a3a65a65289665a
spring.security.oauth2.client.registration.kakao.client-secret = YOPVl63axocnZnUeOtMxlnjwKdZCmpeM
# 2. \uB3D9\uC758\uD56D\uBAA9 [ \uB3D9\uC758\uD56D\uBAA9 ID ]
spring.security.oauth2.client.registration.kakao.scope = profile_nickname,account_email
# 3. \uD074\uB77C\uC774\uC5B8\uD2B8 \uC774\uB984
spring.security.oauth2.client.registration.kakao.client-name=kakao
# 4. \uD1A0\uD070 \uC694\uCCAD \uBC29\uC2DD [ ** \uCE74\uCE74\uC624\uB9CC \uD574\uB2F9 ]
spring.security.oauth2.client.registration.kakao.client-authentication-method=post
# 5. \uD1A0\uD070 \uC694\uCCAD
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
# 6. \uC694\uCCADurl : Redirect URI           http://localhost:8081/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}

# 7. \uC694\uCCAD url : \uC778\uC99D URI
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
# 8. \uC694\uCCAD url : \uD1A0\uD070 URI
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
# 9. \uC694\uCCAD url : \uD1A0\uD070 \uBC1B\uC740 \uD68C\uC6D0\uC815\uBCF4 URI
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
# 10. \uD68C\uC6D0\uC815\uBCF4 \uAC00\uC838\uC62C \uC774\uB984 [ json\uD615\uC2DD\uC73C\uB85C kakao_account \uD0A4\uAC12\uC744 \uC774\uC6A9\uD574\uC11C ]
spring.security.oauth2.client.provider.kakao.user-name-attribute=kakao_account

## ??? ???

## 1. ?????? REST API ?, ???? ??

# 1. \uD074\uB77C\uC774\uC5B8\uD2B8\uC758 REST API \uD0A4 \uC640 \uBCF4\uC548 \uCF54\uB4DC
spring.security.oauth2.client.registration.naver.client-id = cL0Qxg6OXVtOChSCsph8
spring.security.oauth2.client.registration.naver.client-secret = kh3Tb9kPdt

# 2. \uB3D9\uC758\uD56D\uBAA9 [ \uB3D9\uC758\uD56D\uBAA9 ID ]
spring.security.oauth2.client.registration.naver.scope = name, email
# 3. \uD074\uB77C\uC774\uC5B8\uD2B8 \uC774\uB984
spring.security.oauth2.client.registration.naver.client-name=naver

# 5. \uD1A0\uD070 \uC694\uCCAD
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
# 6. \uC694\uCCADurl : Redirect URI
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}

# 7. \uC694\uCCAD url : \uC778\uC99D URI
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
# 8. \uC694\uCCAD url : \uD1A0\uD070 URI
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
# 9. \uC694\uCCAD url : \uD1A0\uD070 \uBC1B\uC740 \uD68C\uC6D0\uC815\uBCF4 URI
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
# 10. \uD68C\uC6D0\uC815\uBCF4 \uAC00\uC838\uC62C \uC774\uB984 [ json\uD615\uC2DD\uC73C\uB85C kakao_account \uD0A4\uAC12\uC744 \uC774\uC6A9\uD574\uC11C ]
spring.security.oauth2.client.provider.naver.user-name-attribute=response